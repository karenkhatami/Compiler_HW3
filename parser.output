Terminals unused in grammar

   ERROR


State 25 conflicts: 1 shift/reduce
State 123 conflicts: 1 shift/reduce
State 152 conflicts: 1 shift/reduce
State 174 conflicts: 1 shift/reduce
State 175 conflicts: 1 shift/reduce
State 177 conflicts: 2 reduce/reduce
State 180 conflicts: 1 shift/reduce
State 189 conflicts: 1 shift/reduce
State 193 conflicts: 1 shift/reduce
State 212 conflicts: 1 shift/reduce
State 213 conflicts: 1 shift/reduce
State 220 conflicts: 1 shift/reduce
State 226 conflicts: 1 shift/reduce
State 232 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 $@1: /* empty */

    2 program: $@1 global_decl_list

    3 global_decl_list: global_decl_list global_decl
    4                 | /* empty */

    5 global_decl: decl_list function_decl
    6            | function_decl

    7 $@2: /* empty */

    8 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE $@2 block MK_RBRACE

    9 $@3: /* empty */

   10 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE $@3 block MK_RBRACE
   11              | type ID MK_LPAREN param_list MK_RPAREN MK_SEMICOLON
   12              | type ID MK_LPAREN MK_RPAREN MK_SEMICOLON

   13 param_list: param_list MK_COMMA param
   14           | param

   15 param: type ID
   16      | struct_type ID
   17      | type ID dim_fn
   18      | struct_type ID dim_fn

   19 dim_fn: MK_LB expr_null MK_RB dimfn1

   20 dimfn1: MK_LB expr MK_RB dimfn1
   21       | /* empty */

   22 expr_null: expr
   23          | /* empty */

   24 block: decl_list stmt_list
   25      | stmt_list
   26      | decl_list
   27      | /* empty */

   28 decl_list: decl_list decl
   29          | decl

   30 decl: type_decl
   31     | var_decl

   32 type_decl: TYPEDEF type id_list MK_SEMICOLON
   33          | TYPEDEF VOID id_list MK_SEMICOLON
   34          | TYPEDEF struct_type id_list MK_SEMICOLON
   35          | struct_type MK_SEMICOLON

   36 var_decl: type init_id_list MK_SEMICOLON
   37         | struct_type id_list MK_SEMICOLON
   38         | ID id_list MK_SEMICOLON

   39 type: INT
   40     | FLOAT
   41     | VOID
   42     | error

   43 struct_type: STRUCT tag

   44 $@4: /* empty */

   45 tag: ID MK_LBRACE $@4 decl_list MK_RBRACE

   46 $@5: /* empty */

   47 tag: MK_LBRACE $@5 decl_list MK_RBRACE

   48 $@6: /* empty */

   49 tag: ID MK_LBRACE $@6 MK_RBRACE

   50 $@7: /* empty */

   51 tag: MK_LBRACE $@7 MK_RBRACE
   52    | ID

   53 id_list: ID
   54        | id_list MK_COMMA ID
   55        | id_list MK_COMMA ID dim_decl
   56        | ID dim_decl

   57 dim_decl: MK_LB cexpr MK_RB
   58         | dim_decl MK_LB cexpr MK_RB

   59 cexpr: cexpr add_op mcexpr
   60      | mcexpr

   61 mcexpr: mcexpr mul_op cfactor
   62       | cfactor

   63 cfactor: CONST
   64        | MK_LPAREN cexpr MK_RPAREN

   65 init_id_list: init_id
   66             | init_id_list MK_COMMA init_id

   67 init_id: ID
   68        | ID dim_decl
   69        | ID OP_ASSIGN relop_expr

   70 stmt_list: stmt_list stmt
   71          | stmt

   72 $@8: /* empty */

   73 stmt: MK_LBRACE $@8 block MK_RBRACE
   74     | WHILE MK_LPAREN relop_expr_list MK_RPAREN stmt
   75     | FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   76     | IF MK_LPAREN relop_expr MK_RPAREN stmt ELSE stmt
   77     | IF MK_LPAREN relop_expr MK_RPAREN stmt
   78     | function_call
   79     | var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   80     | relop_expr_list MK_SEMICOLON
   81     | MK_SEMICOLON
   82     | RETURN MK_SEMICOLON
   83     | RETURN relop_expr MK_SEMICOLON

   84 function_call: ID MK_LPAREN relop_expr_list MK_RPAREN

   85 assign_expr_list: nonempty_assign_expr_list
   86                 | /* empty */

   87 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr
   88                          | assign_expr

   89 $@9: /* empty */

   90 assign_expr: ID $@9 OP_ASSIGN relop_expr
   91            | relop_expr

   92 relop_expr: relop_term
   93           | relop_expr OP_OR relop_term

   94 relop_term: relop_factor
   95           | relop_term OP_AND relop_factor

   96 relop_factor: expr
   97             | expr rel_op expr

   98 rel_op: OP_LT
   99       | OP_LE
  100       | OP_GT
  101       | OP_GE
  102       | OP_EQ
  103       | OP_NE

  104 relop_expr_list: nonempty_relop_expr_list
  105                | /* empty */

  106 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr
  107                         | relop_expr

  108 expr: expr add_op term
  109     | term

  110 add_op: OP_PLUS
  111       | OP_MINUS

  112 term: term mul_op factor
  113     | factor

  114 mul_op: OP_TIMES
  115       | OP_DIVIDE

  116 factor: MK_LPAREN relop_expr MK_RPAREN
  117       | OP_NOT MK_LPAREN relop_expr MK_RPAREN
  118       | OP_MINUS MK_LPAREN relop_expr MK_RPAREN
  119       | CONST
  120       | OP_NOT CONST
  121       | OP_MINUS CONST
  122       | function_call
  123       | OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  124       | OP_MINUS ID MK_LPAREN relop_expr_list MK_RPAREN
  125       | var_ref
  126       | OP_NOT var_ref
  127       | OP_MINUS var_ref

  128 var_ref: ID
  129        | var_ref var_ref_dim
  130        | var_ref struct_tail

  131 var_ref_dim: dim
  132            | dim var_ref_dim

  133 dim: MK_LB expr MK_RB

  134 struct_tail: MK_DOT ID


Terminals, with rules where they appear

$end (0) 0
error (256) 42
ID (258) 8 10 11 12 15 16 17 18 38 45 49 52 53 54 55 56 67 68 69 84
    90 123 124 128 134
CONST (259) 63 119 120 121
VOID (260) 33 41
INT (261) 39
FLOAT (262) 40
IF (263) 76 77
ELSE (264) 76
WHILE (265) 74
FOR (266) 75
STRUCT (267) 43
TYPEDEF (268) 32 33 34
OP_ASSIGN (269) 69 79 90
OP_OR (270) 93
OP_AND (271) 95
OP_NOT (272) 117 120 123 126
OP_EQ (273) 102
OP_NE (274) 103
OP_GT (275) 100
OP_LT (276) 98
OP_GE (277) 101
OP_LE (278) 99
OP_PLUS (279) 110
OP_MINUS (280) 111 118 121 124 127
OP_TIMES (281) 114
OP_DIVIDE (282) 115
MK_LB (283) 19 20 57 58 133
MK_RB (284) 19 20 57 58 133
MK_LPAREN (285) 8 10 11 12 64 74 75 76 77 84 116 117 118 123 124
MK_RPAREN (286) 8 10 11 12 64 74 75 76 77 84 116 117 118 123 124
MK_LBRACE (287) 8 10 45 47 49 51 73
MK_RBRACE (288) 8 10 45 47 49 51 73
MK_COMMA (289) 13 54 55 66 87 106
MK_SEMICOLON (290) 11 12 32 33 34 35 36 37 38 75 79 80 81 82 83
MK_DOT (291) 134
ERROR (292)
RETURN (293) 82 83


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
program (40)
    on left: 2, on right: 0
$@1 (41)
    on left: 1, on right: 2
global_decl_list (42)
    on left: 3 4, on right: 2 3
global_decl (43)
    on left: 5 6, on right: 3
function_decl (44)
    on left: 8 10 11 12, on right: 5 6
$@2 (45)
    on left: 7, on right: 8
$@3 (46)
    on left: 9, on right: 10
param_list (47)
    on left: 13 14, on right: 8 11 13
param (48)
    on left: 15 16 17 18, on right: 13 14
dim_fn (49)
    on left: 19, on right: 17 18
dimfn1 (50)
    on left: 20 21, on right: 19 20
expr_null (51)
    on left: 22 23, on right: 19
block (52)
    on left: 24 25 26 27, on right: 8 10 73
decl_list (53)
    on left: 28 29, on right: 5 24 26 28 45 47
decl (54)
    on left: 30 31, on right: 28 29
type_decl (55)
    on left: 32 33 34 35, on right: 30
var_decl (56)
    on left: 36 37 38, on right: 31
type (57)
    on left: 39 40 41 42, on right: 8 10 11 12 15 17 32 36
struct_type (58)
    on left: 43, on right: 16 18 34 35 37
tag (59)
    on left: 45 47 49 51 52, on right: 43
$@4 (60)
    on left: 44, on right: 45
$@5 (61)
    on left: 46, on right: 47
$@6 (62)
    on left: 48, on right: 49
$@7 (63)
    on left: 50, on right: 51
id_list (64)
    on left: 53 54 55 56, on right: 32 33 34 37 38 54 55
dim_decl (65)
    on left: 57 58, on right: 55 56 58 68
cexpr (66)
    on left: 59 60, on right: 57 58 59 64
mcexpr (67)
    on left: 61 62, on right: 59 60 61
cfactor (68)
    on left: 63 64, on right: 61 62
init_id_list (69)
    on left: 65 66, on right: 36 66
init_id (70)
    on left: 67 68 69, on right: 65 66
stmt_list (71)
    on left: 70 71, on right: 24 25 70
stmt (72)
    on left: 73 74 75 76 77 78 79 80 81 82 83, on right: 70 71 74 75
    76 77
$@8 (73)
    on left: 72, on right: 73
function_call (74)
    on left: 84, on right: 78 122
assign_expr_list (75)
    on left: 85 86, on right: 75
nonempty_assign_expr_list (76)
    on left: 87 88, on right: 85 87
assign_expr (77)
    on left: 90 91, on right: 87 88
$@9 (78)
    on left: 89, on right: 90
relop_expr (79)
    on left: 92 93, on right: 69 76 77 79 83 90 91 93 106 107 116 117
    118
relop_term (80)
    on left: 94 95, on right: 92 93 95
relop_factor (81)
    on left: 96 97, on right: 94 95
rel_op (82)
    on left: 98 99 100 101 102 103, on right: 97
relop_expr_list (83)
    on left: 104 105, on right: 74 75 80 84 123 124
nonempty_relop_expr_list (84)
    on left: 106 107, on right: 104 106
expr (85)
    on left: 108 109, on right: 20 22 96 97 108 133
add_op (86)
    on left: 110 111, on right: 59 108
term (87)
    on left: 112 113, on right: 108 109 112
mul_op (88)
    on left: 114 115, on right: 61 112
factor (89)
    on left: 116 117 118 119 120 121 122 123 124 125 126 127, on right:
    112 113
var_ref (90)
    on left: 128 129 130, on right: 79 125 126 127 129 130
var_ref_dim (91)
    on left: 131 132, on right: 129 132
dim (92)
    on left: 133, on right: 131 132
struct_tail (93)
    on left: 134, on right: 130


state 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    2 program: $@1 . global_decl_list

    $default  reduce using rule 4 (global_decl_list)

    global_decl_list  go to state 4


state 3

    0 $accept: program $end .

    $default  accept


state 4

    2 program: $@1 global_decl_list .
    3 global_decl_list: global_decl_list . global_decl

    error    shift, and go to state 5
    ID       shift, and go to state 6
    VOID     shift, and go to state 7
    INT      shift, and go to state 8
    FLOAT    shift, and go to state 9
    STRUCT   shift, and go to state 10
    TYPEDEF  shift, and go to state 11

    $end  reduce using rule 2 (program)

    global_decl    go to state 12
    function_decl  go to state 13
    decl_list      go to state 14
    decl           go to state 15
    type_decl      go to state 16
    var_decl       go to state 17
    type           go to state 18
    struct_type    go to state 19


state 5

   42 type: error .

    $default  reduce using rule 42 (type)


state 6

   38 var_decl: ID . id_list MK_SEMICOLON

    ID  shift, and go to state 20

    id_list  go to state 21


state 7

   41 type: VOID .

    $default  reduce using rule 41 (type)


state 8

   39 type: INT .

    $default  reduce using rule 39 (type)


state 9

   40 type: FLOAT .

    $default  reduce using rule 40 (type)


state 10

   43 struct_type: STRUCT . tag

    ID         shift, and go to state 22
    MK_LBRACE  shift, and go to state 23

    tag  go to state 24


state 11

   32 type_decl: TYPEDEF . type id_list MK_SEMICOLON
   33          | TYPEDEF . VOID id_list MK_SEMICOLON
   34          | TYPEDEF . struct_type id_list MK_SEMICOLON

    error   shift, and go to state 5
    VOID    shift, and go to state 25
    INT     shift, and go to state 8
    FLOAT   shift, and go to state 9
    STRUCT  shift, and go to state 10

    type         go to state 26
    struct_type  go to state 27


state 12

    3 global_decl_list: global_decl_list global_decl .

    $default  reduce using rule 3 (global_decl_list)


state 13

    6 global_decl: function_decl .

    $default  reduce using rule 6 (global_decl)


state 14

    5 global_decl: decl_list . function_decl
   28 decl_list: decl_list . decl

    error    shift, and go to state 5
    ID       shift, and go to state 6
    VOID     shift, and go to state 7
    INT      shift, and go to state 8
    FLOAT    shift, and go to state 9
    STRUCT   shift, and go to state 10
    TYPEDEF  shift, and go to state 11

    function_decl  go to state 28
    decl           go to state 29
    type_decl      go to state 16
    var_decl       go to state 17
    type           go to state 18
    struct_type    go to state 19


state 15

   29 decl_list: decl .

    $default  reduce using rule 29 (decl_list)


state 16

   30 decl: type_decl .

    $default  reduce using rule 30 (decl)


state 17

   31 decl: var_decl .

    $default  reduce using rule 31 (decl)


state 18

    8 function_decl: type . ID MK_LPAREN param_list MK_RPAREN MK_LBRACE $@2 block MK_RBRACE
   10              | type . ID MK_LPAREN MK_RPAREN MK_LBRACE $@3 block MK_RBRACE
   11              | type . ID MK_LPAREN param_list MK_RPAREN MK_SEMICOLON
   12              | type . ID MK_LPAREN MK_RPAREN MK_SEMICOLON
   36 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 30

    init_id_list  go to state 31
    init_id       go to state 32


state 19

   35 type_decl: struct_type . MK_SEMICOLON
   37 var_decl: struct_type . id_list MK_SEMICOLON

    ID            shift, and go to state 20
    MK_SEMICOLON  shift, and go to state 33

    id_list  go to state 34


state 20

   53 id_list: ID .
   56        | ID . dim_decl

    MK_LB  shift, and go to state 35

    $default  reduce using rule 53 (id_list)

    dim_decl  go to state 36


state 21

   38 var_decl: ID id_list . MK_SEMICOLON
   54 id_list: id_list . MK_COMMA ID
   55        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 37
    MK_SEMICOLON  shift, and go to state 38


state 22

   45 tag: ID . MK_LBRACE $@4 decl_list MK_RBRACE
   49    | ID . MK_LBRACE $@6 MK_RBRACE
   52    | ID .

    MK_LBRACE  shift, and go to state 39

    $default  reduce using rule 52 (tag)


state 23

   47 tag: MK_LBRACE . $@5 decl_list MK_RBRACE
   51    | MK_LBRACE . $@7 MK_RBRACE

    MK_RBRACE  reduce using rule 50 ($@7)
    $default   reduce using rule 46 ($@5)

    $@5  go to state 40
    $@7  go to state 41


state 24

   43 struct_type: STRUCT tag .

    $default  reduce using rule 43 (struct_type)


state 25

   33 type_decl: TYPEDEF VOID . id_list MK_SEMICOLON
   41 type: VOID .

    ID  shift, and go to state 20

    ID  [reduce using rule 41 (type)]

    id_list  go to state 42


state 26

   32 type_decl: TYPEDEF type . id_list MK_SEMICOLON

    ID  shift, and go to state 20

    id_list  go to state 43


state 27

   34 type_decl: TYPEDEF struct_type . id_list MK_SEMICOLON

    ID  shift, and go to state 20

    id_list  go to state 44


state 28

    5 global_decl: decl_list function_decl .

    $default  reduce using rule 5 (global_decl)


state 29

   28 decl_list: decl_list decl .

    $default  reduce using rule 28 (decl_list)


state 30

    8 function_decl: type ID . MK_LPAREN param_list MK_RPAREN MK_LBRACE $@2 block MK_RBRACE
   10              | type ID . MK_LPAREN MK_RPAREN MK_LBRACE $@3 block MK_RBRACE
   11              | type ID . MK_LPAREN param_list MK_RPAREN MK_SEMICOLON
   12              | type ID . MK_LPAREN MK_RPAREN MK_SEMICOLON
   67 init_id: ID .
   68        | ID . dim_decl
   69        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 45
    MK_LB      shift, and go to state 35
    MK_LPAREN  shift, and go to state 46

    $default  reduce using rule 67 (init_id)

    dim_decl  go to state 47


state 31

   36 var_decl: type init_id_list . MK_SEMICOLON
   66 init_id_list: init_id_list . MK_COMMA init_id

    MK_COMMA      shift, and go to state 48
    MK_SEMICOLON  shift, and go to state 49


state 32

   65 init_id_list: init_id .

    $default  reduce using rule 65 (init_id_list)


state 33

   35 type_decl: struct_type MK_SEMICOLON .

    $default  reduce using rule 35 (type_decl)


state 34

   37 var_decl: struct_type id_list . MK_SEMICOLON
   54 id_list: id_list . MK_COMMA ID
   55        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 37
    MK_SEMICOLON  shift, and go to state 50


state 35

   57 dim_decl: MK_LB . cexpr MK_RB

    CONST      shift, and go to state 51
    MK_LPAREN  shift, and go to state 52

    cexpr    go to state 53
    mcexpr   go to state 54
    cfactor  go to state 55


state 36

   56 id_list: ID dim_decl .
   58 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 56

    $default  reduce using rule 56 (id_list)


state 37

   54 id_list: id_list MK_COMMA . ID
   55        | id_list MK_COMMA . ID dim_decl

    ID  shift, and go to state 57


state 38

   38 var_decl: ID id_list MK_SEMICOLON .

    $default  reduce using rule 38 (var_decl)


state 39

   45 tag: ID MK_LBRACE . $@4 decl_list MK_RBRACE
   49    | ID MK_LBRACE . $@6 MK_RBRACE

    MK_RBRACE  reduce using rule 48 ($@6)
    $default   reduce using rule 44 ($@4)

    $@4  go to state 58
    $@6  go to state 59


state 40

   47 tag: MK_LBRACE $@5 . decl_list MK_RBRACE

    error    shift, and go to state 5
    ID       shift, and go to state 6
    VOID     shift, and go to state 7
    INT      shift, and go to state 8
    FLOAT    shift, and go to state 9
    STRUCT   shift, and go to state 10
    TYPEDEF  shift, and go to state 11

    decl_list    go to state 60
    decl         go to state 15
    type_decl    go to state 16
    var_decl     go to state 17
    type         go to state 61
    struct_type  go to state 19


state 41

   51 tag: MK_LBRACE $@7 . MK_RBRACE

    MK_RBRACE  shift, and go to state 62


state 42

   33 type_decl: TYPEDEF VOID id_list . MK_SEMICOLON
   54 id_list: id_list . MK_COMMA ID
   55        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 37
    MK_SEMICOLON  shift, and go to state 63


state 43

   32 type_decl: TYPEDEF type id_list . MK_SEMICOLON
   54 id_list: id_list . MK_COMMA ID
   55        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 37
    MK_SEMICOLON  shift, and go to state 64


state 44

   34 type_decl: TYPEDEF struct_type id_list . MK_SEMICOLON
   54 id_list: id_list . MK_COMMA ID
   55        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 37
    MK_SEMICOLON  shift, and go to state 65


state 45

   69 init_id: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 66
    CONST      shift, and go to state 67
    OP_NOT     shift, and go to state 68
    OP_MINUS   shift, and go to state 69
    MK_LPAREN  shift, and go to state 70

    function_call  go to state 71
    relop_expr     go to state 72
    relop_term     go to state 73
    relop_factor   go to state 74
    expr           go to state 75
    term           go to state 76
    factor         go to state 77
    var_ref        go to state 78


state 46

    8 function_decl: type ID MK_LPAREN . param_list MK_RPAREN MK_LBRACE $@2 block MK_RBRACE
   10              | type ID MK_LPAREN . MK_RPAREN MK_LBRACE $@3 block MK_RBRACE
   11              | type ID MK_LPAREN . param_list MK_RPAREN MK_SEMICOLON
   12              | type ID MK_LPAREN . MK_RPAREN MK_SEMICOLON

    error      shift, and go to state 5
    VOID       shift, and go to state 7
    INT        shift, and go to state 8
    FLOAT      shift, and go to state 9
    STRUCT     shift, and go to state 10
    MK_RPAREN  shift, and go to state 79

    param_list   go to state 80
    param        go to state 81
    type         go to state 82
    struct_type  go to state 83


state 47

   58 dim_decl: dim_decl . MK_LB cexpr MK_RB
   68 init_id: ID dim_decl .

    MK_LB  shift, and go to state 56

    $default  reduce using rule 68 (init_id)


state 48

   66 init_id_list: init_id_list MK_COMMA . init_id

    ID  shift, and go to state 84

    init_id  go to state 85


state 49

   36 var_decl: type init_id_list MK_SEMICOLON .

    $default  reduce using rule 36 (var_decl)


state 50

   37 var_decl: struct_type id_list MK_SEMICOLON .

    $default  reduce using rule 37 (var_decl)


state 51

   63 cfactor: CONST .

    $default  reduce using rule 63 (cfactor)


state 52

   64 cfactor: MK_LPAREN . cexpr MK_RPAREN

    CONST      shift, and go to state 51
    MK_LPAREN  shift, and go to state 52

    cexpr    go to state 86
    mcexpr   go to state 54
    cfactor  go to state 55


state 53

   57 dim_decl: MK_LB cexpr . MK_RB
   59 cexpr: cexpr . add_op mcexpr

    OP_PLUS   shift, and go to state 87
    OP_MINUS  shift, and go to state 88
    MK_RB     shift, and go to state 89

    add_op  go to state 90


state 54

   60 cexpr: mcexpr .
   61 mcexpr: mcexpr . mul_op cfactor

    OP_TIMES   shift, and go to state 91
    OP_DIVIDE  shift, and go to state 92

    $default  reduce using rule 60 (cexpr)

    mul_op  go to state 93


state 55

   62 mcexpr: cfactor .

    $default  reduce using rule 62 (mcexpr)


state 56

   58 dim_decl: dim_decl MK_LB . cexpr MK_RB

    CONST      shift, and go to state 51
    MK_LPAREN  shift, and go to state 52

    cexpr    go to state 94
    mcexpr   go to state 54
    cfactor  go to state 55


state 57

   54 id_list: id_list MK_COMMA ID .
   55        | id_list MK_COMMA ID . dim_decl

    MK_LB  shift, and go to state 35

    $default  reduce using rule 54 (id_list)

    dim_decl  go to state 95


state 58

   45 tag: ID MK_LBRACE $@4 . decl_list MK_RBRACE

    error    shift, and go to state 5
    ID       shift, and go to state 6
    VOID     shift, and go to state 7
    INT      shift, and go to state 8
    FLOAT    shift, and go to state 9
    STRUCT   shift, and go to state 10
    TYPEDEF  shift, and go to state 11

    decl_list    go to state 96
    decl         go to state 15
    type_decl    go to state 16
    var_decl     go to state 17
    type         go to state 61
    struct_type  go to state 19


state 59

   49 tag: ID MK_LBRACE $@6 . MK_RBRACE

    MK_RBRACE  shift, and go to state 97


state 60

   28 decl_list: decl_list . decl
   47 tag: MK_LBRACE $@5 decl_list . MK_RBRACE

    error      shift, and go to state 5
    ID         shift, and go to state 6
    VOID       shift, and go to state 7
    INT        shift, and go to state 8
    FLOAT      shift, and go to state 9
    STRUCT     shift, and go to state 10
    TYPEDEF    shift, and go to state 11
    MK_RBRACE  shift, and go to state 98

    decl         go to state 29
    type_decl    go to state 16
    var_decl     go to state 17
    type         go to state 61
    struct_type  go to state 19


state 61

   36 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 84

    init_id_list  go to state 31
    init_id       go to state 32


state 62

   51 tag: MK_LBRACE $@7 MK_RBRACE .

    $default  reduce using rule 51 (tag)


state 63

   33 type_decl: TYPEDEF VOID id_list MK_SEMICOLON .

    $default  reduce using rule 33 (type_decl)


state 64

   32 type_decl: TYPEDEF type id_list MK_SEMICOLON .

    $default  reduce using rule 32 (type_decl)


state 65

   34 type_decl: TYPEDEF struct_type id_list MK_SEMICOLON .

    $default  reduce using rule 34 (type_decl)


state 66

   84 function_call: ID . MK_LPAREN relop_expr_list MK_RPAREN
  128 var_ref: ID .

    MK_LPAREN  shift, and go to state 99

    $default  reduce using rule 128 (var_ref)


state 67

  119 factor: CONST .

    $default  reduce using rule 119 (factor)


state 68

  117 factor: OP_NOT . MK_LPAREN relop_expr MK_RPAREN
  120       | OP_NOT . CONST
  123       | OP_NOT . ID MK_LPAREN relop_expr_list MK_RPAREN
  126       | OP_NOT . var_ref

    ID         shift, and go to state 100
    CONST      shift, and go to state 101
    MK_LPAREN  shift, and go to state 102

    var_ref  go to state 103


state 69

  118 factor: OP_MINUS . MK_LPAREN relop_expr MK_RPAREN
  121       | OP_MINUS . CONST
  124       | OP_MINUS . ID MK_LPAREN relop_expr_list MK_RPAREN
  127       | OP_MINUS . var_ref

    ID         shift, and go to state 104
    CONST      shift, and go to state 105
    MK_LPAREN  shift, and go to state 106

    var_ref  go to state 107


state 70

  116 factor: MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 66
    CONST      shift, and go to state 67
    OP_NOT     shift, and go to state 68
    OP_MINUS   shift, and go to state 69
    MK_LPAREN  shift, and go to state 70

    function_call  go to state 71
    relop_expr     go to state 108
    relop_term     go to state 73
    relop_factor   go to state 74
    expr           go to state 75
    term           go to state 76
    factor         go to state 77
    var_ref        go to state 78


state 71

  122 factor: function_call .

    $default  reduce using rule 122 (factor)


state 72

   69 init_id: ID OP_ASSIGN relop_expr .
   93 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 109

    $default  reduce using rule 69 (init_id)


state 73

   92 relop_expr: relop_term .
   95 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 110

    $default  reduce using rule 92 (relop_expr)


state 74

   94 relop_term: relop_factor .

    $default  reduce using rule 94 (relop_term)


state 75

   96 relop_factor: expr .
   97             | expr . rel_op expr
  108 expr: expr . add_op term

    OP_EQ     shift, and go to state 111
    OP_NE     shift, and go to state 112
    OP_GT     shift, and go to state 113
    OP_LT     shift, and go to state 114
    OP_GE     shift, and go to state 115
    OP_LE     shift, and go to state 116
    OP_PLUS   shift, and go to state 87
    OP_MINUS  shift, and go to state 88

    $default  reduce using rule 96 (relop_factor)

    rel_op  go to state 117
    add_op  go to state 118


state 76

  109 expr: term .
  112 term: term . mul_op factor

    OP_TIMES   shift, and go to state 91
    OP_DIVIDE  shift, and go to state 92

    $default  reduce using rule 109 (expr)

    mul_op  go to state 119


state 77

  113 term: factor .

    $default  reduce using rule 113 (term)


state 78

  125 factor: var_ref .
  129 var_ref: var_ref . var_ref_dim
  130        | var_ref . struct_tail

    MK_LB   shift, and go to state 120
    MK_DOT  shift, and go to state 121

    $default  reduce using rule 125 (factor)

    var_ref_dim  go to state 122
    dim          go to state 123
    struct_tail  go to state 124


state 79

   10 function_decl: type ID MK_LPAREN MK_RPAREN . MK_LBRACE $@3 block MK_RBRACE
   12              | type ID MK_LPAREN MK_RPAREN . MK_SEMICOLON

    MK_LBRACE     shift, and go to state 125
    MK_SEMICOLON  shift, and go to state 126


state 80

    8 function_decl: type ID MK_LPAREN param_list . MK_RPAREN MK_LBRACE $@2 block MK_RBRACE
   11              | type ID MK_LPAREN param_list . MK_RPAREN MK_SEMICOLON
   13 param_list: param_list . MK_COMMA param

    MK_RPAREN  shift, and go to state 127
    MK_COMMA   shift, and go to state 128


state 81

   14 param_list: param .

    $default  reduce using rule 14 (param_list)


state 82

   15 param: type . ID
   17      | type . ID dim_fn

    ID  shift, and go to state 129


state 83

   16 param: struct_type . ID
   18      | struct_type . ID dim_fn

    ID  shift, and go to state 130


state 84

   67 init_id: ID .
   68        | ID . dim_decl
   69        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 45
    MK_LB      shift, and go to state 35

    $default  reduce using rule 67 (init_id)

    dim_decl  go to state 47


state 85

   66 init_id_list: init_id_list MK_COMMA init_id .

    $default  reduce using rule 66 (init_id_list)


state 86

   59 cexpr: cexpr . add_op mcexpr
   64 cfactor: MK_LPAREN cexpr . MK_RPAREN

    OP_PLUS    shift, and go to state 87
    OP_MINUS   shift, and go to state 88
    MK_RPAREN  shift, and go to state 131

    add_op  go to state 90


state 87

  110 add_op: OP_PLUS .

    $default  reduce using rule 110 (add_op)


state 88

  111 add_op: OP_MINUS .

    $default  reduce using rule 111 (add_op)


state 89

   57 dim_decl: MK_LB cexpr MK_RB .

    $default  reduce using rule 57 (dim_decl)


state 90

   59 cexpr: cexpr add_op . mcexpr

    CONST      shift, and go to state 51
    MK_LPAREN  shift, and go to state 52

    mcexpr   go to state 132
    cfactor  go to state 55


state 91

  114 mul_op: OP_TIMES .

    $default  reduce using rule 114 (mul_op)


state 92

  115 mul_op: OP_DIVIDE .

    $default  reduce using rule 115 (mul_op)


state 93

   61 mcexpr: mcexpr mul_op . cfactor

    CONST      shift, and go to state 51
    MK_LPAREN  shift, and go to state 52

    cfactor  go to state 133


state 94

   58 dim_decl: dim_decl MK_LB cexpr . MK_RB
   59 cexpr: cexpr . add_op mcexpr

    OP_PLUS   shift, and go to state 87
    OP_MINUS  shift, and go to state 88
    MK_RB     shift, and go to state 134

    add_op  go to state 90


state 95

   55 id_list: id_list MK_COMMA ID dim_decl .
   58 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 56

    $default  reduce using rule 55 (id_list)


state 96

   28 decl_list: decl_list . decl
   45 tag: ID MK_LBRACE $@4 decl_list . MK_RBRACE

    error      shift, and go to state 5
    ID         shift, and go to state 6
    VOID       shift, and go to state 7
    INT        shift, and go to state 8
    FLOAT      shift, and go to state 9
    STRUCT     shift, and go to state 10
    TYPEDEF    shift, and go to state 11
    MK_RBRACE  shift, and go to state 135

    decl         go to state 29
    type_decl    go to state 16
    var_decl     go to state 17
    type         go to state 61
    struct_type  go to state 19


state 97

   49 tag: ID MK_LBRACE $@6 MK_RBRACE .

    $default  reduce using rule 49 (tag)


state 98

   47 tag: MK_LBRACE $@5 decl_list MK_RBRACE .

    $default  reduce using rule 47 (tag)


state 99

   84 function_call: ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 66
    CONST      shift, and go to state 67
    OP_NOT     shift, and go to state 68
    OP_MINUS   shift, and go to state 69
    MK_LPAREN  shift, and go to state 70

    $default  reduce using rule 105 (relop_expr_list)

    function_call             go to state 71
    relop_expr                go to state 136
    relop_term                go to state 73
    relop_factor              go to state 74
    relop_expr_list           go to state 137
    nonempty_relop_expr_list  go to state 138
    expr                      go to state 75
    term                      go to state 76
    factor                    go to state 77
    var_ref                   go to state 78


state 100

  123 factor: OP_NOT ID . MK_LPAREN relop_expr_list MK_RPAREN
  128 var_ref: ID .

    MK_LPAREN  shift, and go to state 139

    $default  reduce using rule 128 (var_ref)


state 101

  120 factor: OP_NOT CONST .

    $default  reduce using rule 120 (factor)


state 102

  117 factor: OP_NOT MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 66
    CONST      shift, and go to state 67
    OP_NOT     shift, and go to state 68
    OP_MINUS   shift, and go to state 69
    MK_LPAREN  shift, and go to state 70

    function_call  go to state 71
    relop_expr     go to state 140
    relop_term     go to state 73
    relop_factor   go to state 74
    expr           go to state 75
    term           go to state 76
    factor         go to state 77
    var_ref        go to state 78


state 103

  126 factor: OP_NOT var_ref .
  129 var_ref: var_ref . var_ref_dim
  130        | var_ref . struct_tail

    MK_LB   shift, and go to state 120
    MK_DOT  shift, and go to state 121

    $default  reduce using rule 126 (factor)

    var_ref_dim  go to state 122
    dim          go to state 123
    struct_tail  go to state 124


state 104

  124 factor: OP_MINUS ID . MK_LPAREN relop_expr_list MK_RPAREN
  128 var_ref: ID .

    MK_LPAREN  shift, and go to state 141

    $default  reduce using rule 128 (var_ref)


state 105

  121 factor: OP_MINUS CONST .

    $default  reduce using rule 121 (factor)


state 106

  118 factor: OP_MINUS MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 66
    CONST      shift, and go to state 67
    OP_NOT     shift, and go to state 68
    OP_MINUS   shift, and go to state 69
    MK_LPAREN  shift, and go to state 70

    function_call  go to state 71
    relop_expr     go to state 142
    relop_term     go to state 73
    relop_factor   go to state 74
    expr           go to state 75
    term           go to state 76
    factor         go to state 77
    var_ref        go to state 78


state 107

  127 factor: OP_MINUS var_ref .
  129 var_ref: var_ref . var_ref_dim
  130        | var_ref . struct_tail

    MK_LB   shift, and go to state 120
    MK_DOT  shift, and go to state 121

    $default  reduce using rule 127 (factor)

    var_ref_dim  go to state 122
    dim          go to state 123
    struct_tail  go to state 124


state 108

   93 relop_expr: relop_expr . OP_OR relop_term
  116 factor: MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 109
    MK_RPAREN  shift, and go to state 143


state 109

   93 relop_expr: relop_expr OP_OR . relop_term

    ID         shift, and go to state 66
    CONST      shift, and go to state 67
    OP_NOT     shift, and go to state 68
    OP_MINUS   shift, and go to state 69
    MK_LPAREN  shift, and go to state 70

    function_call  go to state 71
    relop_term     go to state 144
    relop_factor   go to state 74
    expr           go to state 75
    term           go to state 76
    factor         go to state 77
    var_ref        go to state 78


state 110

   95 relop_term: relop_term OP_AND . relop_factor

    ID         shift, and go to state 66
    CONST      shift, and go to state 67
    OP_NOT     shift, and go to state 68
    OP_MINUS   shift, and go to state 69
    MK_LPAREN  shift, and go to state 70

    function_call  go to state 71
    relop_factor   go to state 145
    expr           go to state 75
    term           go to state 76
    factor         go to state 77
    var_ref        go to state 78


state 111

  102 rel_op: OP_EQ .

    $default  reduce using rule 102 (rel_op)


state 112

  103 rel_op: OP_NE .

    $default  reduce using rule 103 (rel_op)


state 113

  100 rel_op: OP_GT .

    $default  reduce using rule 100 (rel_op)


state 114

   98 rel_op: OP_LT .

    $default  reduce using rule 98 (rel_op)


state 115

  101 rel_op: OP_GE .

    $default  reduce using rule 101 (rel_op)


state 116

   99 rel_op: OP_LE .

    $default  reduce using rule 99 (rel_op)


state 117

   97 relop_factor: expr rel_op . expr

    ID         shift, and go to state 66
    CONST      shift, and go to state 67
    OP_NOT     shift, and go to state 68
    OP_MINUS   shift, and go to state 69
    MK_LPAREN  shift, and go to state 70

    function_call  go to state 71
    expr           go to state 146
    term           go to state 76
    factor         go to state 77
    var_ref        go to state 78


state 118

  108 expr: expr add_op . term

    ID         shift, and go to state 66
    CONST      shift, and go to state 67
    OP_NOT     shift, and go to state 68
    OP_MINUS   shift, and go to state 69
    MK_LPAREN  shift, and go to state 70

    function_call  go to state 71
    term           go to state 147
    factor         go to state 77
    var_ref        go to state 78


state 119

  112 term: term mul_op . factor

    ID         shift, and go to state 66
    CONST      shift, and go to state 67
    OP_NOT     shift, and go to state 68
    OP_MINUS   shift, and go to state 69
    MK_LPAREN  shift, and go to state 70

    function_call  go to state 71
    factor         go to state 148
    var_ref        go to state 78


state 120

  133 dim: MK_LB . expr MK_RB

    ID         shift, and go to state 66
    CONST      shift, and go to state 67
    OP_NOT     shift, and go to state 68
    OP_MINUS   shift, and go to state 69
    MK_LPAREN  shift, and go to state 70

    function_call  go to state 71
    expr           go to state 149
    term           go to state 76
    factor         go to state 77
    var_ref        go to state 78


state 121

  134 struct_tail: MK_DOT . ID

    ID  shift, and go to state 150


state 122

  129 var_ref: var_ref var_ref_dim .

    $default  reduce using rule 129 (var_ref)


state 123

  131 var_ref_dim: dim .
  132            | dim . var_ref_dim

    MK_LB  shift, and go to state 120

    MK_LB     [reduce using rule 131 (var_ref_dim)]
    $default  reduce using rule 131 (var_ref_dim)

    var_ref_dim  go to state 151
    dim          go to state 123


state 124

  130 var_ref: var_ref struct_tail .

    $default  reduce using rule 130 (var_ref)


state 125

   10 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE . $@3 block MK_RBRACE

    $default  reduce using rule 9 ($@3)

    $@3  go to state 152


state 126

   12 function_decl: type ID MK_LPAREN MK_RPAREN MK_SEMICOLON .

    $default  reduce using rule 12 (function_decl)


state 127

    8 function_decl: type ID MK_LPAREN param_list MK_RPAREN . MK_LBRACE $@2 block MK_RBRACE
   11              | type ID MK_LPAREN param_list MK_RPAREN . MK_SEMICOLON

    MK_LBRACE     shift, and go to state 153
    MK_SEMICOLON  shift, and go to state 154


state 128

   13 param_list: param_list MK_COMMA . param

    error   shift, and go to state 5
    VOID    shift, and go to state 7
    INT     shift, and go to state 8
    FLOAT   shift, and go to state 9
    STRUCT  shift, and go to state 10

    param        go to state 155
    type         go to state 82
    struct_type  go to state 83


state 129

   15 param: type ID .
   17      | type ID . dim_fn

    MK_LB  shift, and go to state 156

    $default  reduce using rule 15 (param)

    dim_fn  go to state 157


state 130

   16 param: struct_type ID .
   18      | struct_type ID . dim_fn

    MK_LB  shift, and go to state 156

    $default  reduce using rule 16 (param)

    dim_fn  go to state 158


state 131

   64 cfactor: MK_LPAREN cexpr MK_RPAREN .

    $default  reduce using rule 64 (cfactor)


state 132

   59 cexpr: cexpr add_op mcexpr .
   61 mcexpr: mcexpr . mul_op cfactor

    OP_TIMES   shift, and go to state 91
    OP_DIVIDE  shift, and go to state 92

    $default  reduce using rule 59 (cexpr)

    mul_op  go to state 93


state 133

   61 mcexpr: mcexpr mul_op cfactor .

    $default  reduce using rule 61 (mcexpr)


state 134

   58 dim_decl: dim_decl MK_LB cexpr MK_RB .

    $default  reduce using rule 58 (dim_decl)


state 135

   45 tag: ID MK_LBRACE $@4 decl_list MK_RBRACE .

    $default  reduce using rule 45 (tag)


state 136

   93 relop_expr: relop_expr . OP_OR relop_term
  107 nonempty_relop_expr_list: relop_expr .

    OP_OR  shift, and go to state 109

    $default  reduce using rule 107 (nonempty_relop_expr_list)


state 137

   84 function_call: ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 159


state 138

  104 relop_expr_list: nonempty_relop_expr_list .
  106 nonempty_relop_expr_list: nonempty_relop_expr_list . MK_COMMA relop_expr

    MK_COMMA  shift, and go to state 160

    $default  reduce using rule 104 (relop_expr_list)


state 139

  123 factor: OP_NOT ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 66
    CONST      shift, and go to state 67
    OP_NOT     shift, and go to state 68
    OP_MINUS   shift, and go to state 69
    MK_LPAREN  shift, and go to state 70

    $default  reduce using rule 105 (relop_expr_list)

    function_call             go to state 71
    relop_expr                go to state 136
    relop_term                go to state 73
    relop_factor              go to state 74
    relop_expr_list           go to state 161
    nonempty_relop_expr_list  go to state 138
    expr                      go to state 75
    term                      go to state 76
    factor                    go to state 77
    var_ref                   go to state 78


state 140

   93 relop_expr: relop_expr . OP_OR relop_term
  117 factor: OP_NOT MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 109
    MK_RPAREN  shift, and go to state 162


state 141

  124 factor: OP_MINUS ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 66
    CONST      shift, and go to state 67
    OP_NOT     shift, and go to state 68
    OP_MINUS   shift, and go to state 69
    MK_LPAREN  shift, and go to state 70

    $default  reduce using rule 105 (relop_expr_list)

    function_call             go to state 71
    relop_expr                go to state 136
    relop_term                go to state 73
    relop_factor              go to state 74
    relop_expr_list           go to state 163
    nonempty_relop_expr_list  go to state 138
    expr                      go to state 75
    term                      go to state 76
    factor                    go to state 77
    var_ref                   go to state 78


state 142

   93 relop_expr: relop_expr . OP_OR relop_term
  118 factor: OP_MINUS MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 109
    MK_RPAREN  shift, and go to state 164


state 143

  116 factor: MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 116 (factor)


state 144

   93 relop_expr: relop_expr OP_OR relop_term .
   95 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 110

    $default  reduce using rule 93 (relop_expr)


state 145

   95 relop_term: relop_term OP_AND relop_factor .

    $default  reduce using rule 95 (relop_term)


state 146

   97 relop_factor: expr rel_op expr .
  108 expr: expr . add_op term

    OP_PLUS   shift, and go to state 87
    OP_MINUS  shift, and go to state 88

    $default  reduce using rule 97 (relop_factor)

    add_op  go to state 118


state 147

  108 expr: expr add_op term .
  112 term: term . mul_op factor

    OP_TIMES   shift, and go to state 91
    OP_DIVIDE  shift, and go to state 92

    $default  reduce using rule 108 (expr)

    mul_op  go to state 119


state 148

  112 term: term mul_op factor .

    $default  reduce using rule 112 (term)


state 149

  108 expr: expr . add_op term
  133 dim: MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 87
    OP_MINUS  shift, and go to state 88
    MK_RB     shift, and go to state 165

    add_op  go to state 118


state 150

  134 struct_tail: MK_DOT ID .

    $default  reduce using rule 134 (struct_tail)


state 151

  132 var_ref_dim: dim var_ref_dim .

    $default  reduce using rule 132 (var_ref_dim)


state 152

   10 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE $@3 . block MK_RBRACE

    error         shift, and go to state 5
    ID            shift, and go to state 166
    CONST         shift, and go to state 67
    VOID          shift, and go to state 7
    INT           shift, and go to state 8
    FLOAT         shift, and go to state 9
    IF            shift, and go to state 167
    WHILE         shift, and go to state 168
    FOR           shift, and go to state 169
    STRUCT        shift, and go to state 10
    TYPEDEF       shift, and go to state 11
    OP_NOT        shift, and go to state 68
    OP_MINUS      shift, and go to state 69
    MK_LPAREN     shift, and go to state 70
    MK_LBRACE     shift, and go to state 170
    MK_SEMICOLON  shift, and go to state 171
    RETURN        shift, and go to state 172

    MK_RBRACE     reduce using rule 27 (block)
    MK_SEMICOLON  [reduce using rule 105 (relop_expr_list)]

    block                     go to state 173
    decl_list                 go to state 174
    decl                      go to state 15
    type_decl                 go to state 16
    var_decl                  go to state 17
    type                      go to state 61
    struct_type               go to state 19
    stmt_list                 go to state 175
    stmt                      go to state 176
    function_call             go to state 177
    relop_expr                go to state 136
    relop_term                go to state 73
    relop_factor              go to state 74
    relop_expr_list           go to state 178
    nonempty_relop_expr_list  go to state 138
    expr                      go to state 75
    term                      go to state 76
    factor                    go to state 77
    var_ref                   go to state 179


state 153

    8 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE . $@2 block MK_RBRACE

    $default  reduce using rule 7 ($@2)

    $@2  go to state 180


state 154

   11 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_SEMICOLON .

    $default  reduce using rule 11 (function_decl)


state 155

   13 param_list: param_list MK_COMMA param .

    $default  reduce using rule 13 (param_list)


state 156

   19 dim_fn: MK_LB . expr_null MK_RB dimfn1

    ID         shift, and go to state 66
    CONST      shift, and go to state 67
    OP_NOT     shift, and go to state 68
    OP_MINUS   shift, and go to state 69
    MK_LPAREN  shift, and go to state 70

    $default  reduce using rule 23 (expr_null)

    expr_null      go to state 181
    function_call  go to state 71
    expr           go to state 182
    term           go to state 76
    factor         go to state 77
    var_ref        go to state 78


state 157

   17 param: type ID dim_fn .

    $default  reduce using rule 17 (param)


state 158

   18 param: struct_type ID dim_fn .

    $default  reduce using rule 18 (param)


state 159

   84 function_call: ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 84 (function_call)


state 160

  106 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA . relop_expr

    ID         shift, and go to state 66
    CONST      shift, and go to state 67
    OP_NOT     shift, and go to state 68
    OP_MINUS   shift, and go to state 69
    MK_LPAREN  shift, and go to state 70

    function_call  go to state 71
    relop_expr     go to state 183
    relop_term     go to state 73
    relop_factor   go to state 74
    expr           go to state 75
    term           go to state 76
    factor         go to state 77
    var_ref        go to state 78


state 161

  123 factor: OP_NOT ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 184


state 162

  117 factor: OP_NOT MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 117 (factor)


state 163

  124 factor: OP_MINUS ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 185


state 164

  118 factor: OP_MINUS MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 118 (factor)


state 165

  133 dim: MK_LB expr MK_RB .

    $default  reduce using rule 133 (dim)


state 166

   38 var_decl: ID . id_list MK_SEMICOLON
   84 function_call: ID . MK_LPAREN relop_expr_list MK_RPAREN
  128 var_ref: ID .

    ID         shift, and go to state 20
    MK_LPAREN  shift, and go to state 99

    $default  reduce using rule 128 (var_ref)

    id_list  go to state 21


state 167

   76 stmt: IF . MK_LPAREN relop_expr MK_RPAREN stmt ELSE stmt
   77     | IF . MK_LPAREN relop_expr MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 186


state 168

   74 stmt: WHILE . MK_LPAREN relop_expr_list MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 187


state 169

   75 stmt: FOR . MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 188


state 170

   73 stmt: MK_LBRACE . $@8 block MK_RBRACE

    $default  reduce using rule 72 ($@8)

    $@8  go to state 189


state 171

   81 stmt: MK_SEMICOLON .

    $default  reduce using rule 81 (stmt)


state 172

   82 stmt: RETURN . MK_SEMICOLON
   83     | RETURN . relop_expr MK_SEMICOLON

    ID            shift, and go to state 66
    CONST         shift, and go to state 67
    OP_NOT        shift, and go to state 68
    OP_MINUS      shift, and go to state 69
    MK_LPAREN     shift, and go to state 70
    MK_SEMICOLON  shift, and go to state 190

    function_call  go to state 71
    relop_expr     go to state 191
    relop_term     go to state 73
    relop_factor   go to state 74
    expr           go to state 75
    term           go to state 76
    factor         go to state 77
    var_ref        go to state 78


state 173

   10 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE $@3 block . MK_RBRACE

    MK_RBRACE  shift, and go to state 192


state 174

   24 block: decl_list . stmt_list
   26      | decl_list .
   28 decl_list: decl_list . decl

    error         shift, and go to state 5
    ID            shift, and go to state 166
    CONST         shift, and go to state 67
    VOID          shift, and go to state 7
    INT           shift, and go to state 8
    FLOAT         shift, and go to state 9
    IF            shift, and go to state 167
    WHILE         shift, and go to state 168
    FOR           shift, and go to state 169
    STRUCT        shift, and go to state 10
    TYPEDEF       shift, and go to state 11
    OP_NOT        shift, and go to state 68
    OP_MINUS      shift, and go to state 69
    MK_LPAREN     shift, and go to state 70
    MK_LBRACE     shift, and go to state 170
    MK_SEMICOLON  shift, and go to state 171
    RETURN        shift, and go to state 172

    MK_RBRACE     reduce using rule 26 (block)
    MK_SEMICOLON  [reduce using rule 105 (relop_expr_list)]

    decl                      go to state 29
    type_decl                 go to state 16
    var_decl                  go to state 17
    type                      go to state 61
    struct_type               go to state 19
    stmt_list                 go to state 193
    stmt                      go to state 176
    function_call             go to state 177
    relop_expr                go to state 136
    relop_term                go to state 73
    relop_factor              go to state 74
    relop_expr_list           go to state 178
    nonempty_relop_expr_list  go to state 138
    expr                      go to state 75
    term                      go to state 76
    factor                    go to state 77
    var_ref                   go to state 179


state 175

   25 block: stmt_list .
   70 stmt_list: stmt_list . stmt

    ID            shift, and go to state 66
    CONST         shift, and go to state 67
    IF            shift, and go to state 167
    WHILE         shift, and go to state 168
    FOR           shift, and go to state 169
    OP_NOT        shift, and go to state 68
    OP_MINUS      shift, and go to state 69
    MK_LPAREN     shift, and go to state 70
    MK_LBRACE     shift, and go to state 170
    MK_SEMICOLON  shift, and go to state 171
    RETURN        shift, and go to state 172

    MK_SEMICOLON  [reduce using rule 105 (relop_expr_list)]
    $default      reduce using rule 25 (block)

    stmt                      go to state 194
    function_call             go to state 177
    relop_expr                go to state 136
    relop_term                go to state 73
    relop_factor              go to state 74
    relop_expr_list           go to state 178
    nonempty_relop_expr_list  go to state 138
    expr                      go to state 75
    term                      go to state 76
    factor                    go to state 77
    var_ref                   go to state 179


state 176

   71 stmt_list: stmt .

    $default  reduce using rule 71 (stmt_list)


state 177

   78 stmt: function_call .
  122 factor: function_call .

    OP_OR         reduce using rule 122 (factor)
    OP_AND        reduce using rule 122 (factor)
    OP_EQ         reduce using rule 122 (factor)
    OP_NE         reduce using rule 122 (factor)
    OP_GT         reduce using rule 122 (factor)
    OP_LT         reduce using rule 122 (factor)
    OP_GE         reduce using rule 122 (factor)
    OP_LE         reduce using rule 122 (factor)
    OP_PLUS       reduce using rule 122 (factor)
    OP_MINUS      reduce using rule 78 (stmt)
    OP_MINUS      [reduce using rule 122 (factor)]
    OP_TIMES      reduce using rule 122 (factor)
    OP_DIVIDE     reduce using rule 122 (factor)
    MK_COMMA      reduce using rule 122 (factor)
    MK_SEMICOLON  reduce using rule 78 (stmt)
    MK_SEMICOLON  [reduce using rule 122 (factor)]
    $default      reduce using rule 78 (stmt)


state 178

   80 stmt: relop_expr_list . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 195


state 179

   79 stmt: var_ref . OP_ASSIGN relop_expr MK_SEMICOLON
  125 factor: var_ref .
  129 var_ref: var_ref . var_ref_dim
  130        | var_ref . struct_tail

    OP_ASSIGN  shift, and go to state 196
    MK_LB      shift, and go to state 120
    MK_DOT     shift, and go to state 121

    $default  reduce using rule 125 (factor)

    var_ref_dim  go to state 122
    dim          go to state 123
    struct_tail  go to state 124


state 180

    8 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE $@2 . block MK_RBRACE

    error         shift, and go to state 5
    ID            shift, and go to state 166
    CONST         shift, and go to state 67
    VOID          shift, and go to state 7
    INT           shift, and go to state 8
    FLOAT         shift, and go to state 9
    IF            shift, and go to state 167
    WHILE         shift, and go to state 168
    FOR           shift, and go to state 169
    STRUCT        shift, and go to state 10
    TYPEDEF       shift, and go to state 11
    OP_NOT        shift, and go to state 68
    OP_MINUS      shift, and go to state 69
    MK_LPAREN     shift, and go to state 70
    MK_LBRACE     shift, and go to state 170
    MK_SEMICOLON  shift, and go to state 171
    RETURN        shift, and go to state 172

    MK_RBRACE     reduce using rule 27 (block)
    MK_SEMICOLON  [reduce using rule 105 (relop_expr_list)]

    block                     go to state 197
    decl_list                 go to state 174
    decl                      go to state 15
    type_decl                 go to state 16
    var_decl                  go to state 17
    type                      go to state 61
    struct_type               go to state 19
    stmt_list                 go to state 175
    stmt                      go to state 176
    function_call             go to state 177
    relop_expr                go to state 136
    relop_term                go to state 73
    relop_factor              go to state 74
    relop_expr_list           go to state 178
    nonempty_relop_expr_list  go to state 138
    expr                      go to state 75
    term                      go to state 76
    factor                    go to state 77
    var_ref                   go to state 179


state 181

   19 dim_fn: MK_LB expr_null . MK_RB dimfn1

    MK_RB  shift, and go to state 198


state 182

   22 expr_null: expr .
  108 expr: expr . add_op term

    OP_PLUS   shift, and go to state 87
    OP_MINUS  shift, and go to state 88

    $default  reduce using rule 22 (expr_null)

    add_op  go to state 118


state 183

   93 relop_expr: relop_expr . OP_OR relop_term
  106 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr .

    OP_OR  shift, and go to state 109

    $default  reduce using rule 106 (nonempty_relop_expr_list)


state 184

  123 factor: OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 123 (factor)


state 185

  124 factor: OP_MINUS ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 124 (factor)


state 186

   76 stmt: IF MK_LPAREN . relop_expr MK_RPAREN stmt ELSE stmt
   77     | IF MK_LPAREN . relop_expr MK_RPAREN stmt

    ID         shift, and go to state 66
    CONST      shift, and go to state 67
    OP_NOT     shift, and go to state 68
    OP_MINUS   shift, and go to state 69
    MK_LPAREN  shift, and go to state 70

    function_call  go to state 71
    relop_expr     go to state 199
    relop_term     go to state 73
    relop_factor   go to state 74
    expr           go to state 75
    term           go to state 76
    factor         go to state 77
    var_ref        go to state 78


state 187

   74 stmt: WHILE MK_LPAREN . relop_expr_list MK_RPAREN stmt

    ID         shift, and go to state 66
    CONST      shift, and go to state 67
    OP_NOT     shift, and go to state 68
    OP_MINUS   shift, and go to state 69
    MK_LPAREN  shift, and go to state 70

    $default  reduce using rule 105 (relop_expr_list)

    function_call             go to state 71
    relop_expr                go to state 136
    relop_term                go to state 73
    relop_factor              go to state 74
    relop_expr_list           go to state 200
    nonempty_relop_expr_list  go to state 138
    expr                      go to state 75
    term                      go to state 76
    factor                    go to state 77
    var_ref                   go to state 78


state 188

   75 stmt: FOR MK_LPAREN . assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 201
    CONST      shift, and go to state 67
    OP_NOT     shift, and go to state 68
    OP_MINUS   shift, and go to state 69
    MK_LPAREN  shift, and go to state 70

    $default  reduce using rule 86 (assign_expr_list)

    function_call              go to state 71
    assign_expr_list           go to state 202
    nonempty_assign_expr_list  go to state 203
    assign_expr                go to state 204
    relop_expr                 go to state 205
    relop_term                 go to state 73
    relop_factor               go to state 74
    expr                       go to state 75
    term                       go to state 76
    factor                     go to state 77
    var_ref                    go to state 78


state 189

   73 stmt: MK_LBRACE $@8 . block MK_RBRACE

    error         shift, and go to state 5
    ID            shift, and go to state 166
    CONST         shift, and go to state 67
    VOID          shift, and go to state 7
    INT           shift, and go to state 8
    FLOAT         shift, and go to state 9
    IF            shift, and go to state 167
    WHILE         shift, and go to state 168
    FOR           shift, and go to state 169
    STRUCT        shift, and go to state 10
    TYPEDEF       shift, and go to state 11
    OP_NOT        shift, and go to state 68
    OP_MINUS      shift, and go to state 69
    MK_LPAREN     shift, and go to state 70
    MK_LBRACE     shift, and go to state 170
    MK_SEMICOLON  shift, and go to state 171
    RETURN        shift, and go to state 172

    MK_RBRACE     reduce using rule 27 (block)
    MK_SEMICOLON  [reduce using rule 105 (relop_expr_list)]

    block                     go to state 206
    decl_list                 go to state 174
    decl                      go to state 15
    type_decl                 go to state 16
    var_decl                  go to state 17
    type                      go to state 61
    struct_type               go to state 19
    stmt_list                 go to state 175
    stmt                      go to state 176
    function_call             go to state 177
    relop_expr                go to state 136
    relop_term                go to state 73
    relop_factor              go to state 74
    relop_expr_list           go to state 178
    nonempty_relop_expr_list  go to state 138
    expr                      go to state 75
    term                      go to state 76
    factor                    go to state 77
    var_ref                   go to state 179


state 190

   82 stmt: RETURN MK_SEMICOLON .

    $default  reduce using rule 82 (stmt)


state 191

   83 stmt: RETURN relop_expr . MK_SEMICOLON
   93 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 109
    MK_SEMICOLON  shift, and go to state 207


state 192

   10 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE $@3 block MK_RBRACE .

    $default  reduce using rule 10 (function_decl)


state 193

   24 block: decl_list stmt_list .
   70 stmt_list: stmt_list . stmt

    ID            shift, and go to state 66
    CONST         shift, and go to state 67
    IF            shift, and go to state 167
    WHILE         shift, and go to state 168
    FOR           shift, and go to state 169
    OP_NOT        shift, and go to state 68
    OP_MINUS      shift, and go to state 69
    MK_LPAREN     shift, and go to state 70
    MK_LBRACE     shift, and go to state 170
    MK_SEMICOLON  shift, and go to state 171
    RETURN        shift, and go to state 172

    MK_SEMICOLON  [reduce using rule 105 (relop_expr_list)]
    $default      reduce using rule 24 (block)

    stmt                      go to state 194
    function_call             go to state 177
    relop_expr                go to state 136
    relop_term                go to state 73
    relop_factor              go to state 74
    relop_expr_list           go to state 178
    nonempty_relop_expr_list  go to state 138
    expr                      go to state 75
    term                      go to state 76
    factor                    go to state 77
    var_ref                   go to state 179


state 194

   70 stmt_list: stmt_list stmt .

    $default  reduce using rule 70 (stmt_list)


state 195

   80 stmt: relop_expr_list MK_SEMICOLON .

    $default  reduce using rule 80 (stmt)


state 196

   79 stmt: var_ref OP_ASSIGN . relop_expr MK_SEMICOLON

    ID         shift, and go to state 66
    CONST      shift, and go to state 67
    OP_NOT     shift, and go to state 68
    OP_MINUS   shift, and go to state 69
    MK_LPAREN  shift, and go to state 70

    function_call  go to state 71
    relop_expr     go to state 208
    relop_term     go to state 73
    relop_factor   go to state 74
    expr           go to state 75
    term           go to state 76
    factor         go to state 77
    var_ref        go to state 78


state 197

    8 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE $@2 block . MK_RBRACE

    MK_RBRACE  shift, and go to state 209


state 198

   19 dim_fn: MK_LB expr_null MK_RB . dimfn1

    MK_LB  shift, and go to state 210

    $default  reduce using rule 21 (dimfn1)

    dimfn1  go to state 211


state 199

   76 stmt: IF MK_LPAREN relop_expr . MK_RPAREN stmt ELSE stmt
   77     | IF MK_LPAREN relop_expr . MK_RPAREN stmt
   93 relop_expr: relop_expr . OP_OR relop_term

    OP_OR      shift, and go to state 109
    MK_RPAREN  shift, and go to state 212


state 200

   74 stmt: WHILE MK_LPAREN relop_expr_list . MK_RPAREN stmt

    MK_RPAREN  shift, and go to state 213


state 201

   84 function_call: ID . MK_LPAREN relop_expr_list MK_RPAREN
   90 assign_expr: ID . $@9 OP_ASSIGN relop_expr
  128 var_ref: ID .

    MK_LPAREN  shift, and go to state 99

    OP_ASSIGN  reduce using rule 89 ($@9)
    $default   reduce using rule 128 (var_ref)

    $@9  go to state 214


state 202

   75 stmt: FOR MK_LPAREN assign_expr_list . MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 215


state 203

   85 assign_expr_list: nonempty_assign_expr_list .
   87 nonempty_assign_expr_list: nonempty_assign_expr_list . MK_COMMA assign_expr

    MK_COMMA  shift, and go to state 216

    $default  reduce using rule 85 (assign_expr_list)


state 204

   88 nonempty_assign_expr_list: assign_expr .

    $default  reduce using rule 88 (nonempty_assign_expr_list)


state 205

   91 assign_expr: relop_expr .
   93 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 109

    $default  reduce using rule 91 (assign_expr)


state 206

   73 stmt: MK_LBRACE $@8 block . MK_RBRACE

    MK_RBRACE  shift, and go to state 217


state 207

   83 stmt: RETURN relop_expr MK_SEMICOLON .

    $default  reduce using rule 83 (stmt)


state 208

   79 stmt: var_ref OP_ASSIGN relop_expr . MK_SEMICOLON
   93 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 109
    MK_SEMICOLON  shift, and go to state 218


state 209

    8 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE $@2 block MK_RBRACE .

    $default  reduce using rule 8 (function_decl)


state 210

   20 dimfn1: MK_LB . expr MK_RB dimfn1

    ID         shift, and go to state 66
    CONST      shift, and go to state 67
    OP_NOT     shift, and go to state 68
    OP_MINUS   shift, and go to state 69
    MK_LPAREN  shift, and go to state 70

    function_call  go to state 71
    expr           go to state 219
    term           go to state 76
    factor         go to state 77
    var_ref        go to state 78


state 211

   19 dim_fn: MK_LB expr_null MK_RB dimfn1 .

    $default  reduce using rule 19 (dim_fn)


state 212

   76 stmt: IF MK_LPAREN relop_expr MK_RPAREN . stmt ELSE stmt
   77     | IF MK_LPAREN relop_expr MK_RPAREN . stmt

    ID            shift, and go to state 66
    CONST         shift, and go to state 67
    IF            shift, and go to state 167
    WHILE         shift, and go to state 168
    FOR           shift, and go to state 169
    OP_NOT        shift, and go to state 68
    OP_MINUS      shift, and go to state 69
    MK_LPAREN     shift, and go to state 70
    MK_LBRACE     shift, and go to state 170
    MK_SEMICOLON  shift, and go to state 171
    RETURN        shift, and go to state 172

    MK_SEMICOLON  [reduce using rule 105 (relop_expr_list)]

    stmt                      go to state 220
    function_call             go to state 177
    relop_expr                go to state 136
    relop_term                go to state 73
    relop_factor              go to state 74
    relop_expr_list           go to state 178
    nonempty_relop_expr_list  go to state 138
    expr                      go to state 75
    term                      go to state 76
    factor                    go to state 77
    var_ref                   go to state 179


state 213

   74 stmt: WHILE MK_LPAREN relop_expr_list MK_RPAREN . stmt

    ID            shift, and go to state 66
    CONST         shift, and go to state 67
    IF            shift, and go to state 167
    WHILE         shift, and go to state 168
    FOR           shift, and go to state 169
    OP_NOT        shift, and go to state 68
    OP_MINUS      shift, and go to state 69
    MK_LPAREN     shift, and go to state 70
    MK_LBRACE     shift, and go to state 170
    MK_SEMICOLON  shift, and go to state 171
    RETURN        shift, and go to state 172

    MK_SEMICOLON  [reduce using rule 105 (relop_expr_list)]

    stmt                      go to state 221
    function_call             go to state 177
    relop_expr                go to state 136
    relop_term                go to state 73
    relop_factor              go to state 74
    relop_expr_list           go to state 178
    nonempty_relop_expr_list  go to state 138
    expr                      go to state 75
    term                      go to state 76
    factor                    go to state 77
    var_ref                   go to state 179


state 214

   90 assign_expr: ID $@9 . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 222


state 215

   75 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON . relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 66
    CONST      shift, and go to state 67
    OP_NOT     shift, and go to state 68
    OP_MINUS   shift, and go to state 69
    MK_LPAREN  shift, and go to state 70

    $default  reduce using rule 105 (relop_expr_list)

    function_call             go to state 71
    relop_expr                go to state 136
    relop_term                go to state 73
    relop_factor              go to state 74
    relop_expr_list           go to state 223
    nonempty_relop_expr_list  go to state 138
    expr                      go to state 75
    term                      go to state 76
    factor                    go to state 77
    var_ref                   go to state 78


state 216

   87 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA . assign_expr

    ID         shift, and go to state 201
    CONST      shift, and go to state 67
    OP_NOT     shift, and go to state 68
    OP_MINUS   shift, and go to state 69
    MK_LPAREN  shift, and go to state 70

    function_call  go to state 71
    assign_expr    go to state 224
    relop_expr     go to state 205
    relop_term     go to state 73
    relop_factor   go to state 74
    expr           go to state 75
    term           go to state 76
    factor         go to state 77
    var_ref        go to state 78


state 217

   73 stmt: MK_LBRACE $@8 block MK_RBRACE .

    $default  reduce using rule 73 (stmt)


state 218

   79 stmt: var_ref OP_ASSIGN relop_expr MK_SEMICOLON .

    $default  reduce using rule 79 (stmt)


state 219

   20 dimfn1: MK_LB expr . MK_RB dimfn1
  108 expr: expr . add_op term

    OP_PLUS   shift, and go to state 87
    OP_MINUS  shift, and go to state 88
    MK_RB     shift, and go to state 225

    add_op  go to state 118


state 220

   76 stmt: IF MK_LPAREN relop_expr MK_RPAREN stmt . ELSE stmt
   77     | IF MK_LPAREN relop_expr MK_RPAREN stmt .

    ELSE  shift, and go to state 226

    ELSE      [reduce using rule 77 (stmt)]
    $default  reduce using rule 77 (stmt)


state 221

   74 stmt: WHILE MK_LPAREN relop_expr_list MK_RPAREN stmt .

    $default  reduce using rule 74 (stmt)


state 222

   90 assign_expr: ID $@9 OP_ASSIGN . relop_expr

    ID         shift, and go to state 66
    CONST      shift, and go to state 67
    OP_NOT     shift, and go to state 68
    OP_MINUS   shift, and go to state 69
    MK_LPAREN  shift, and go to state 70

    function_call  go to state 71
    relop_expr     go to state 227
    relop_term     go to state 73
    relop_factor   go to state 74
    expr           go to state 75
    term           go to state 76
    factor         go to state 77
    var_ref        go to state 78


state 223

   75 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list . MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 228


state 224

   87 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr .

    $default  reduce using rule 87 (nonempty_assign_expr_list)


state 225

   20 dimfn1: MK_LB expr MK_RB . dimfn1

    MK_LB  shift, and go to state 210

    $default  reduce using rule 21 (dimfn1)

    dimfn1  go to state 229


state 226

   76 stmt: IF MK_LPAREN relop_expr MK_RPAREN stmt ELSE . stmt

    ID            shift, and go to state 66
    CONST         shift, and go to state 67
    IF            shift, and go to state 167
    WHILE         shift, and go to state 168
    FOR           shift, and go to state 169
    OP_NOT        shift, and go to state 68
    OP_MINUS      shift, and go to state 69
    MK_LPAREN     shift, and go to state 70
    MK_LBRACE     shift, and go to state 170
    MK_SEMICOLON  shift, and go to state 171
    RETURN        shift, and go to state 172

    MK_SEMICOLON  [reduce using rule 105 (relop_expr_list)]

    stmt                      go to state 230
    function_call             go to state 177
    relop_expr                go to state 136
    relop_term                go to state 73
    relop_factor              go to state 74
    relop_expr_list           go to state 178
    nonempty_relop_expr_list  go to state 138
    expr                      go to state 75
    term                      go to state 76
    factor                    go to state 77
    var_ref                   go to state 179


state 227

   90 assign_expr: ID $@9 OP_ASSIGN relop_expr .
   93 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 109

    $default  reduce using rule 90 (assign_expr)


state 228

   75 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON . assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 201
    CONST      shift, and go to state 67
    OP_NOT     shift, and go to state 68
    OP_MINUS   shift, and go to state 69
    MK_LPAREN  shift, and go to state 70

    $default  reduce using rule 86 (assign_expr_list)

    function_call              go to state 71
    assign_expr_list           go to state 231
    nonempty_assign_expr_list  go to state 203
    assign_expr                go to state 204
    relop_expr                 go to state 205
    relop_term                 go to state 73
    relop_factor               go to state 74
    expr                       go to state 75
    term                       go to state 76
    factor                     go to state 77
    var_ref                    go to state 78


state 229

   20 dimfn1: MK_LB expr MK_RB dimfn1 .

    $default  reduce using rule 20 (dimfn1)


state 230

   76 stmt: IF MK_LPAREN relop_expr MK_RPAREN stmt ELSE stmt .

    $default  reduce using rule 76 (stmt)


state 231

   75 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list . MK_RPAREN stmt

    MK_RPAREN  shift, and go to state 232


state 232

   75 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN . stmt

    ID            shift, and go to state 66
    CONST         shift, and go to state 67
    IF            shift, and go to state 167
    WHILE         shift, and go to state 168
    FOR           shift, and go to state 169
    OP_NOT        shift, and go to state 68
    OP_MINUS      shift, and go to state 69
    MK_LPAREN     shift, and go to state 70
    MK_LBRACE     shift, and go to state 170
    MK_SEMICOLON  shift, and go to state 171
    RETURN        shift, and go to state 172

    MK_SEMICOLON  [reduce using rule 105 (relop_expr_list)]

    stmt                      go to state 233
    function_call             go to state 177
    relop_expr                go to state 136
    relop_term                go to state 73
    relop_factor              go to state 74
    relop_expr_list           go to state 178
    nonempty_relop_expr_list  go to state 138
    expr                      go to state 75
    term                      go to state 76
    factor                    go to state 77
    var_ref                   go to state 179


state 233

   75 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt .

    $default  reduce using rule 75 (stmt)
